#!/usr/bin/env python3
from os import listdir,system,path
from getch import getch
from threading import Thread
from playsound import playsound
from multiprocessing import Process, Event
from time import sleep

# Config file provided by user
while True:
    try:
        config_file=open('config.mpp').readlines()
        break
    except FileNotFoundError:
        config=(
'''# This line defines what player will be used. You can use whatever you'd like since this program relies on an external media output. For example use mpv.

PLAYER-USE=mpv

# Use either getch or standard input method in python. Getch is recommended by default.

GREP-METHOD=getch
''')
        open('config.mpp','w').write(config)
# THIS DEFINES THE USER GIVEN PREFERENCES IN config.mpp FILE
music_media_player=config_file[2].split('=')[1].split('\n')[0]
grep_method=config_file[6].split('=')[1]

global listed_music
global music
try: # Opening a cached file containing the last used music folder
    with open('/tmp/music_location','r') as o:
        music=o.read()
        listed_music=listdir(music)
except FileNotFoundError:
    music=input("Enter the path of a music folder:\n")
    listed_music=listdir(music)
    open('/tmp/music_location','w').write(music)

def musics():
    global listed_music
    global music
    try: # Opening a cached file containing the last used music folder
        with open('/tmp/music_location','r') as o:
            music=o.read()
            listed_music=listdir(music)
    except FileNotFoundError:
        music=input("Enter the path of a music folder:\n")
        listed_music=listdir(music)
        open('/tmp/music_location','w').write(music)

global msc # Default global variable for listing the state of a running process
global couterb
counterb = -1
msc=False
global a
a=1 # Prevents a slider from going backwards when scrolling
auto=0 # Autoplay toggle
autoplay='off' # Visual for autoplay
def_range=10 # The number of lines(songs) shown at one time on screen

def banner(): # Main screen that shows the options
    print(f"\n\n[r] Select new music folder\n[a] Autoplay is {autoplay}\n[q] Quit\n[w] Scroll up\n[s] Scroll down\n[/] Search")
    if msc==True:
        print("[c] Stop playing\n[p] Pause playing")
    else:
        pass

def display_music(a): # Loop that lists the songs from a folder
    system('clear')
    try:
        for r in range(def_range):
            if path.isdir(music+"/"+listed_music[a]):
                print(f'{a} DIR {listed_music[a]}')
            else:
                print(f'{a} {listed_music[a]}')
            a+=1
        banner()
        return a
    except:
        banner()
        pass

def player(ask): # Function for a music player
    # Checks if it's a directory
    if path.isdir(music+"/"+listed_music[int(ask)]):
        global predir
        predir = open('/tmp/predir','a').writelines(music+"\n")
        open('/tmp/music_location', 'w').write(music+"/"+listed_music[int(ask)])
        musics()
        system('clear')
        global a
        display_music(a)
    else:
        play=listed_music[int(ask)]
        pl=f'"{play}"'
        global P1
        playsound_=system(f"{music_media_player} '{music}/{play}'")
        P1=Process(target=playsound_)
        def playmusic():
            P1.start()
            return P1
        T1=Thread(target=playmusic)
        system('clear')
        if auto==1: # autoplay function # BROKEN
            def loop():
                while True:
                    proc=playmusic()
                    while True:
                        if proc.is_alive:
                            pass
                        else:
                            try:
                                proc.terminate()
                                break
                            except:
                                break
                    ask=int(ask)+1
                    play=listed_music[int(ask)-1]
                    pl=f'"{play}"'
            Thread(target=loop).start()
        else:
            playmusic()
        a=1

while True: # Main
        display_music(a)
        print("Select a song:\n")
        ask=getch()
        if ask.isnumeric():
            ask=ask+input()
        else:
            pass
        if ask=='a': # Autoplay
            if auto==0:
                auto=1
                autoplay='on'
            elif auto==1:
                auto=0
                autoplay='off'
        elif ask=='/': # Search function
            def search():
                system('clear')
                slash_ask=input("Enter a name of a song:\n")
                try:
                    count=0
                    while True:
                        if str(slash_ask.lower()) in listed_music[count].lower():
                            print(f"[{count}]"+listed_music[count])
                            count+=1
                        else:
                            count+=1
                except:
                    print("\n[/] Search\n[q] Quit\nChoose song:\n")
                    ask_mus=getch()
                    if ask_mus.isnumeric():
                        ask_mus=ask_mus+input()
                    else:
                        pass
                    if ask_mus=='q':
                        pass
                    elif ask_mus=='/':
                        search()
                    else:
                        try:
                            P1.terminate()
                        except:
                            pass
                        player(ask_mus)
            search()
        elif ask=='s': # Scroll down
            if (a+10)<len(listed_music):
                a+=10
                display_music(a)
            else:
                pass
        elif ask=='w': # Scroll up
            if (a-10)>=0:
                a-=10
                display_music(a)
            #elif display_music(a)<0:
                #pass
        elif ask=='q': # QUIT THE PROGRAM
            exit()
        elif ask=='r': # DELETE MUSIC FILE LOCATION
            try:
                system('rm /tmp/music_location')
                system('rm /tmp/predir')
                system('clear')
            except:
                pass
            musics()
            display_music(a)
        elif ask=='b': # JESUS FIXED IT BUT JESUS CAN ONLY GO ONE STEP BACK
            predir2 = open('/tmp/predir','r').readlines(counterb) # GOTTA GO TO THIS DIRECTORY
            listed_music = listdir(str(predir2[-1].split('\n')[0]))
            open('/tmp/music_location', 'w').write(str(predir2[counterb].split('\n')[0]))
            counterb-=1
            musics()
            display_music(a)
        elif ask=='c':
            try:
                msc=False
                P1.terminate()
            except:
                pass
        elif ask!='a' or 'q' or 'w' or 's' or '/' or 'c':
            if ask.isnumeric():
                try:
                    P1.terminate()
                except:
                    pass
                msc=True
                player(ask)
            else:
                pass
        else:
            try:
                P1.terminate()
            except:
                pass
            player(ask)
