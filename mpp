#!/usr/bin/env python3
from os import listdir,system,path,getpid
from getch import getch
from time import sleep
from ffpyplayer.player import MediaPlayer
from multiprocessing import Process

# Prevents a slider from going backwards when scrolling
global a
a = 0
counter = 1

# VISUAL INDICATOR FOR AUTOPLAY FEATURE
autoplay = 'off'
# TOGGLE AUTOPLAY
auto = 0

# The number of lines(songs) shown at one time on screen
def_range = 10 

def musics():
    global listed_music
    global music
    try:          
        with open('/tmp/music_location','r') as o:
            music = o.read()
            listed_music = listdir(music)
    except FileNotFoundError:
        music = input("Enter the path of a music folder:\n")
        listed_music = listdir(music)
        open('/tmp/music_location','w').write(music)

    #Opening a cached file containing the last used music folder
    try:        
        with open('/tmp/music_location','r') as o:
            music = o.read()
            listed_music = listdir(music)
    except FileNotFoundError:
        music = input("Enter the path of a music folder:\n")
        listed_music = listdir(music)
        open('/tmp/music_location','w').write(music)
musics()


def banner():
    print(f"\n\n[r] Select new music folder\n[a] Autoplay is {autoplay}\n[q] Quit\n[w] Scroll up\n[s] Scroll down\n[/] Search")

def display_music(a):
    system('clear')
    try:
        for r in range(def_range):
            if path.isdir(music+"/"+listed_music[a]):
                print(f'{a} DIR {listed_music[a]}')
            else:
                print(f'{a} {listed_music[a]}')
            a+=1
        banner()
        return a
    except:
        banner()
        pass

# MUSIC PLAYER
def player(ask):
    # CHECKS THE PATH TO SEE IF IT'S NOT A FOLDER
    if path.isdir(music+"/"+listed_music[int(ask)]):
        global predir
        predir = open('/tmp/predir','a').writelines(music+"\n")
        open('/tmp/music_location', 'w').write(music+"/"+listed_music[int(ask)])
        musics()
        system('clear')
        global a
        display_music(a)
    else:
        global th1
        def mdp():
            MediaPlayer(f"{music}/{listed_music[int(ask)]}")
        th1 = Process(target=mdp)
        th1.start()

# MAIN
while True:
        display_music(a)
        print("Select a song:\n")
        # GET USER INPUT
        ask = getch()
        if ask.isnumeric():
            ask = ask+input()
        else:
            pass
        # AUTOPLAY
        if ask == 'a':             
            if auto == 0:
                auto = 1
                autoplay = 'on'
            elif auto == 1:
                auto = 0
                autoplay = 'off'
        # SEARCH
        elif ask == '/':             
            def search():
                system('clear')
                slash_ask = input("Enter a name of a song:\n")
                try:
                    count = 0
                    while True:
                        if str(slash_ask.lower()) in listed_music[count].lower():
                            print(f"[{count}]"+listed_music[count])
                            count+=1
                        else:
                            count+=1
                except:
                    print("\n[/] Search\n[q] Quit\nChoose song:\n")
                    ask_mus = getch()
                    if ask_mus.isnumeric():
                        ask_mus = ask_mus+input()
                    else:
                        pass
                    if ask_mus == 'q':
                        pass
                    elif ask_mus == '/':
                        search()
                    else:
                        player(ask_mus)
            search()
        # SCROLLING DOWN
        elif ask == 's': 
            if (a+10)<len(listed_music):
                a+=10
                display_music(a)
            else:
                pass

        # SCROLLING UP
        elif ask == 'w':
            if (a-10) >= 0:
                a-=10
                display_music(a)

        # EXIT PROGRAM
        elif ask=='q':
            exit()

        # STOP THREAD FROM RUNNING
        elif ask == 'c':
            th1.terminate()

        # DELETE PREVIOUS MUSIC FILE LOCATION
        elif ask == 'r':
            try:
                system('rm /tmp/music_location')
                system('rm /tmp/predir')
                system('clear')
            except:
                pass
            # CREATES NEW MUSIC FILE LOCATION
            musics()
            display_music(a)

        elif ask == 'b':
            previous = open('/tmp/predir', 'r').readlines()
            previous2 = previous[len(previous) - counter].split('\n')[0]
            open('/tmp/music_location', 'w').write(previous2)
            musics()
            display_music(a)
            counter += 1

        elif ask!='a' or 'q' or 'w' or 's' or '/' or 'c':
            if ask.isnumeric():
                player(ask)
            else:
                pass

        else:
            player(ask)
